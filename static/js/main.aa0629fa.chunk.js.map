{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","newTitle","status","handleSearchInput","event","setState","target","value","getVisibleTodos","visibleTodos","props","todos","filter","todo","title","includes","completed","handleSelectChange","selectUser","this","filteredTodos","className","type","onChange","map","htmlFor","readOnly","checked","id","onClick","userId","React","Component","url","getTodos","a","fetch","response","json","getUsers","CurrentUser","user","loadData","removeUser","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa0629fa.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (userId: number) => void,\n};\n\ntype State = {\n  newTitle: string,\n  status: string,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    newTitle: '',\n    status: 'all',\n  };\n\n  handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newTitle: event.target.value,\n    });\n  };\n\n  getVisibleTodos = (): Todo[] => {\n    const visibleTodos = this.props.todos\n      .filter(todo => todo.title.includes(this.state.newTitle));\n\n    if (this.state.status === 'active') {\n      return visibleTodos.filter(todo => !todo.completed);\n    }\n\n    if (this.state.status === 'completed') {\n      return visibleTodos.filter(todo => todo.completed);\n    }\n\n    return visibleTodos;\n  };\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      status: event.target.value,\n    });\n  };\n\n  render() {\n    const { selectUser } = this.props;\n    const { newTitle, status } = this.state;\n    const filteredTodos = this.getVisibleTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          value={newTitle}\n          onChange={this.handleSearchInput}\n        />\n\n        <select\n          value={status}\n          onChange={this.handleSelectChange}\n        >\n          <option value=\"all\">Show all</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"active\">Active</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className=\"TodoList__list-item\"\n              >\n                <label htmlFor=\"todo\">\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                    id=\"todo\"\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const url = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(`${url}/todos`);\n\n  return response.json();\n}\n\nexport async function getUsers(userId: number): Promise<User> {\n  const response = await fetch(`${url}/users/${userId}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../api';\n\ntype Props = {\n  userId: number,\n  removeUser: () => void,\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component <Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  async componentDidUpdate(props: Props) {\n    if (props.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUsers(this.props.userId);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { removeUser } = this.props;\n\n    return (\n      <div>\n        {user && (\n          <div className=\"CurrentUser\">\n            <button\n              type=\"button\"\n              onClick={removeUser}\n            >\n              Remove\n            </button>\n\n            <h2 className=\"CurrentUser__title\"><span>Selected user: 2</span></h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[],\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n    });\n  }\n\n  selectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  removeUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} removeUser={this.removeUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}